{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  //Configuracion de proxy
  "ReverseProxy": {
    //"Routes": Define cómo se enrutan las solicitudes entrantes.
    "Routes": {
      "catalog-route": {
        // grupo de servidores (o servicio) se debe enviar la solicitud.
        "ClusterId": "catalog-cluster",
        // La ruta que debe coincidir en la solicitud entrante.
        "Match": {
          "Path": "/catalog-service/{**catch-all}"
        },
        //Transformación a aplicar a la URL antes de enviarla al backend (aquí solo quitan el prefijo).
        "Transforms": [ { "PathPattern": "{**catch-all}" } ]
      },
      //Esto significa: Cualquier petición que comience con /catalog-service/ se enviará al catalog-cluster,
      //y el proxy quitará ese prefijo antes de pasar la petición al backend.
      "basket-route": {
        "ClusterId": "basket-cluster",
        "Match": {
          "Path": "/basket-service/{**catch-all}"
        },
        "Transforms": [ { "PathPattern": "{**catch-all}" } ]
      },
      "ordering-route": {
        "ClusterId": "ordering-cluster",
        //Aplica una política de limitación de velocidad (rate limiting), para evitar sobrecarga y por razones de seguridad. 
        //"fixed" significa que tiene un número fijo de solicitudes permitidas por periodo configuradas en program.cs
        //En diez segundos se admite un maximo de 5 solicitudes (ver program.cs)
        "RateLimiterPolicy": "fixed",
        "Match": {
          "Path": "/ordering-service/{**catch-all}"
        },
        "Transforms": [ { "PathPattern": "{**catch-all}" } ]
      }
    },
    //Define a dónde debe enrutar el tráfico cada ruta.
    //Cada "cluster" representa un servicio backend
    "Clusters": {
      "catalog-cluster": {
        "Destinations": {
          "destination1": {
            //Esto indica que cualquier petición para el catalog-cluster será enviada al backend en http://catalog.api:8080.
            //http://catalog.api:8080 corresponde al contenedor del api corriendo configurado en el docker-compose
            //Ya que en docker los servicios se comunican usando el nombre del contenedor
            //nombre de contenedor y puerto expuesto
            "Address": "http://catalog.api:8080"
          }
        }
      },
      "basket-cluster": {
        "Destinations": {
          "destination1": {
            "Address": "http://basket.api:8080"
          }
        }
      },
      "ordering-cluster": {
        "Destinations": {
          "destination1": {
            "Address": "http://ordering.api:8080"
          }
        }
      }
    }
  }
  // 
  //Peticion a GET /catalog-service/products se redirige a GET http://catalog.api:8080/products
  //Encuentra que la ruta coincide con "catalog-route".
  //Quita /catalog-service/ por el transform {**catch-all}.
  //Redirige la petición
  //{**catch-all} para capturar todo lo que venga después de una ruta base, incluyendo subrutas con múltiples niveles.
}